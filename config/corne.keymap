/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        lt_lower: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        td_upper: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&kp LS(SPACE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U      |  I  |  O  |  P  | BSPC |
// | NAV  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J      |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M      |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR |SPAC |   | ENT | UPPER   | ALT |
            bindings = <
  &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
  &mo 3   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
  &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LSHFT
               &kp LGUI  &lt_lower 1 LCTRL  &kp SPACE   &kp RET &lt_lower 2 LC(B) &kp LALT
            >;
        };
        lower {
// -----------------------------------------------------------------------------------------
// | ESC  |  !  |  @  |  (  |  )  |  `  |   |  +  |  1  |  2  |  3  |  *  | BSPC  |
// |      |  #  |  $  |  {  |  }  |  |  |   |  -  |  4  |  5  |  6  |  0  |  =    |
// | SHFT |     |  ^  |     |  %  |  [  |   |  ]  |  7  |  8  |  9  |     | SHFT  |
//                                | SPC |         | BSPC| ESC | DEL |
            bindings = <
  &kp ESC   &kp EXCL  &kp AT     &kp LPAR  &kp RPAR  &kp LA(GRAVE)       &kp PLUS   &kp N1   &kp N2    &kp N3    &kp ASTRK  &kp BSPC
  &trans    &kp HASH  &kp DLLR   &kp LBRC  &kp RBRC  &kp PIPE      &kp MINUS  &kp N4   &kp N5    &kp N6    &kp N0   &kp EQUAL
  &kp LSHFT    &trans &kp CARET  &trans &kp PRCNT  &kp LBKT   &kp RBKT  &kp N7   &kp N8    &kp N9    &trans     &kp LSHFT
                           &trans &trans  &kp SPACE  &kp BSPC  &kp ESC  &kp DEL
            >;
        };
        upper {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  (  |  )  |  `  |   |  +  | CMD+1 | CMD+2 | CMD+3 |  *  | BSPC  |
// |      |  #  |  $  |  {  |  }  |  |  |   |  -  | CMD+4 | CMD+5 | CMD+6 |     |  =    |
// | SHFT |  %  |  ^  |     |     |  [  |   |     | CMD+7 | CMD+8 | CMD+9 |     | SHFT  |
//                    |  &  |  _  | SPC |
            bindings = <
  &trans   &kp EXCL  &kp AT     &kp LPAR  &kp RPAR  &kp GRAVE   &kp PLUS   &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans    &kp BSPC
  &trans      &kp HASH  &kp DLLR   &kp LBRC  &kp RBRC  &kp PIPE      &kp MINUS  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &trans     &kp EQUAL
  &kp LSHFT   &kp PRCNT &kp CARET  &trans &trans  &kp RBKT      &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)   &kp LSHFT
                                   &kp AMPS  &kp UNDER &kp SPACE     &trans  &trans  &trans
            >;
        };
        navigation {
// -----------------------------------------------------------------------------------------
// |  TAB |     |PREV |PLAY |NEXT | VOL_UP  |   |     |     |  UP  |     |     | BSPC  |
// |      |     |     |     |     | VOL_DOWN|   |     | LFT | DOWN | RGT |     |       |
// | SHIFT|LCTRL|     |     |     | MUTE    |   |     |     |      |     |     | SHFT  |
//                          | GUI | CMD+SPC |   | ENT | ESC | ALT  |
            bindings = <
  &kp TAB   &trans &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT     &kp C_VOL_UP   &trans &trans    &kp UP    &trans     &trans &kp BSPC
  &trans    &trans &trans &trans &trans &kp C_VOL_DN   &trans &kp LEFT  &kp DOWN  &kp RIGHT  &trans &trans
  &kp LSHFT &kp LCTRL &trans &trans &kp C_MUTE &trans   &trans &trans    &trans    &trans     &trans &kp LSHFT
                         &trans &kp LGUI &kp LG(SPACE)   &kp RET &trans  &kp LALT
            >;
        };
    };
};
